name: Generate Notes Assets

on:
  push:
    branches:
      - main
    paths:
      - 'Notes/**'

permissions:
  contents: write

jobs:
  build-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Environment
        run: |
          npm install @octokit/rest fs path
          sudo apt-get update
          sudo apt-get install -y poppler-utils unoconv libreoffice-writer imagemagick

      - name: Generate Notes Metadata and Thumbnails
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node .github/workflows/generate-notes-metadata.js

          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          find Notes/ -type f \( -name "*.pdf" -o -name "*.docx" \) > notes.txt
          mkdir -p resources/thumbnails
          
          for THUMBNAIL in resources/thumbnails/*.jpg; do
            NOTE_NAME=$(basename "$THUMBNAIL" .jpg | sed 's/\(.*\)_/\1./')
            if ! grep -q "Notes/${NOTE_NAME}.pdf" notes.txt && ! grep -q "Notes/${NOTE_NAME}.docx" notes.txt; then
              echo "Deleting orphaned thumbnail: $THUMBNAIL"
              rm "$THUMBNAIL"
            fi
          done

          while read -r NOTE; do
            NOTE_NAME=$(basename "$NOTE" | sed 's/\(.*\)\./\1_/')
            THUMBNAIL_PATH="resources/thumbnails/${NOTE_NAME}.jpg"
            
            if [[ ! -f "$THUMBNAIL_PATH" ]]; then
                echo "Generating thumbnail for ${NOTE}"
                if [[ "$NOTE" == *.pdf ]]; then
                  pdftocairo -jpeg -singlefile -scale-to 600 "$NOTE" "${THUMBNAIL_PATH%.jpg}"
                elif [[ "$NOTE" == *.docx ]]; then
                  unoconv --stdout -f pdf "$NOTE" > temp.pdf
                  pdftocairo -jpeg -singlefile -scale-to 600 temp.pdf "${THUMBNAIL_PATH%.jpg}"
                  rm temp.pdf
                fi

                if [[ -f "${THUMBNAIL_PATH%.jpg}" ]]; then
                  echo "Compressing thumbnail: ${THUMBNAIL_PATH%.jpg}"
                  mogrify -quality 70 "${THUMBNAIL_PATH%.jpg}"
                fi
            fi
          done < notes.txt

          if [[ -n $(git status --porcelain) ]]; then
            echo "Committing all changes..."
            git add resources/notes_metadata.json
            git add resources/thumbnails/
            git commit -m "feat(ci): Auto-generate notes metadata and thumbnails"
            git pull --rebase
            git push
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
